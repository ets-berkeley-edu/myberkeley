<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <artifactId>edu.berkeley.myberkeley.base</artifactId>
        <groupId>edu.berkeley.myberkeley</groupId>
        <version>1.1.1</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>edu.berkeley.myberkeley.notifications</artifactId>
    <name>MyBerkeley CalDAV-based Notifications bundle</name>
    <packaging>bundle</packaging>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Bundle-Category>myberkeley</Bundle-Category>
                        <Import-Package>!sun.misc,*</Import-Package>
                        <DynamicImport-Package>sun.misc.*</DynamicImport-Package>
                        <Embed-Transitive>true</Embed-Transitive>
                        <Embed-Dependency>backport-util-concurrent</Embed-Dependency>
                        <Export-Package>net.fortuna.ical4j.*,zoneinfo.*</Export-Package>
                        <Include-Resource>{maven-resources}</Include-Resource>
                        <Sling-Initial-Content>
                            SLING-INF/content/var/notifications;path:=/var/notifications;overwrite:=true;uninstall:=true
                        </Sling-Initial-Content>
                    </instructions>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-scr-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
    <!-- repositories for ical4j -->
    <repositories>
        <repository>
            <id>modularity-releases</id>
            <name>Modularity Maven Repository</name>
            <url>http://m2.modularity.net.au/releases</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>modularity-snapshots</id>
            <name>Modularity Snapshot Repository</name>
            <url>http://m2.modularity.net.au/snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
    <dependencies>
        <!-- nakamura packages -->
        <dependency>
            <groupId>org.sakaiproject.nakamura</groupId>
            <artifactId>org.sakaiproject.nakamura.doc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.sakaiproject.nakamura</groupId>
            <artifactId>org.sakaiproject.nakamura.core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.sakaiproject.nakamura</groupId>
            <artifactId>org.sakaiproject.nakamura.user</artifactId>
        </dependency>
        <dependency>
            <groupId>org.sakaiproject.nakamura</groupId>
            <artifactId>org.sakaiproject.nakamura.search.api</artifactId>
            <version>1.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.sakaiproject.nakamura</groupId>
            <artifactId>org.sakaiproject.nakamura.messaging</artifactId>
            <version>1.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.sakaiproject.nakamura</groupId>
            <artifactId>org.sakaiproject.nakamura.solr</artifactId>
        </dependency>
        <dependency>
            <groupId>org.sakaiproject.nakamura</groupId>
            <artifactId>org.sakaiproject.nakamura.profile.api</artifactId>
        </dependency>

        <!-- OSGi -->
        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.osgi.core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.osgi.compendium</artifactId>
        </dependency>

        <!-- jcr -->
        <dependency>
            <groupId>javax.jcr</groupId>
            <artifactId>jcr</artifactId>
        </dependency>

        <!-- commons -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>

        <!-- logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
        </dependency>

        <!-- jms -->

        <!-- testing -->

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>

        <!-- calendar -->
        <dependency>
            <groupId>org.mnode.ical4j</groupId>
            <artifactId>ical4j</artifactId>
        </dependency>
       <!-- ical4j requires this package -->
       <dependency>
         <groupId>backport-util-concurrent</groupId>
         <artifactId>backport-util-concurrent</artifactId>
       </dependency>

        <!-- java -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
        </dependency>

        <!-- myberkeley dependencies -->
        <dependency>
            <groupId>edu.berkeley.myberkeley</groupId>
            <artifactId>edu.berkeley.myberkeley.caldav</artifactId>
            <version>1.1.1</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>edu.berkeley.myberkeley</groupId>
            <artifactId>edu.berkeley.myberkeley.dynamiclist</artifactId>
            <version>1.1.1</version>
            <scope>provided</scope>
        </dependency>

        <!-- sling -->
      <dependency>
        <groupId>org.apache.jackrabbit</groupId>
        <artifactId>jackrabbit-api</artifactId>
        <version>2.1.1</version>
        <scope>provided</scope>
      </dependency>
        <dependency>
          <groupId>org.apache.sling</groupId>
          <artifactId>org.apache.sling.api</artifactId>
        </dependency>
        <dependency>
          <groupId>org.apache.sling</groupId>
          <artifactId>org.apache.sling.jcr.api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.sling</groupId>
            <artifactId>org.apache.sling.commons.json</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.sling</groupId>
            <artifactId>org.apache.sling.commons.osgi</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.sling</groupId>
            <artifactId>org.apache.sling.commons.scheduler</artifactId>
            <version>2.3.0</version>
        </dependency>
        <dependency>
          <groupId>org.apache.sling</groupId>
          <artifactId>org.apache.sling.jcr.resource</artifactId>
        </dependency>

        <!-- commons -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-email</artifactId>
            <version>1.1</version>
        </dependency>

        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.4</version>
            <scope>test</scope>
        </dependency>

    </dependencies>
</project>
